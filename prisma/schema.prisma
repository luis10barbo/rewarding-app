// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Reward {
  idReward String @unique @default(cuid())
  idOwner  String

  nameReward        String
  descriptionReward String?
  valueReward       Float

  owner User @relation(fields: [idOwner], references: [idUser], onDelete: Cascade)
}

model Goal {
  idGoal  String  @unique @default(cuid())
  idOwner String
  idClaim String?

  nameGoal        String
  descriptionGoal String?
  goalSteps       GoalStep[]
  reward          Float      @default(0)

  claim Claim?
  owner User   @relation(fields: [idOwner], references: [idUser], onDelete: Cascade)
}

model GoalStep {
  idGoalStep String @unique @default(cuid())
  idGoal     String

  contentStep String
  goal        Goal   @relation(fields: [idGoal], references: [idGoal], onDelete: Cascade)

  completed Boolean
}

model Session {
  idSession String  @id @unique
  idUser    String?

  user User? @relation(fields: [idUser], references: [idUser], onDelete: Cascade)
}

model User {
  idUser       String @unique @default(cuid())
  nicknameUser String @unique

  passwordUser String
  salt         String

  balanceUser Float

  goals   Goal[]
  reward  Reward[]
  session Session[]
  claims  Claim[]
}

model Claim {
  idClaim String @unique @default(cuid())
  idOwner String
  idGoal  String @unique

  valueClaim Float
  dateClaim  DateTime @default(now())
  owner      User     @relation(fields: [idOwner], references: [idUser], onDelete: Cascade)
  goal       Goal     @relation(fields: [idGoal], references: [idGoal], onDelete: Cascade)
}
